[
  {
    "id": 1,
    "name": "array",
    "title": "methods & properties",
    "overview": "the JavaScript Array class is a global object that is used in the construction of arrays; which are high-level, list-like objects",

    "desctiption": [
      [
        "desctiption",
        "Arrays are list-like objects whose prototype has methods to perform traversal and mutation operations. Neither the length of a JavaScript array nor the types of its elements are fixed. Since an array's length can change at any time, and data can be stored at non-contiguous locations in the array, JavaScript arrays are not guaranteed to be dense; this depends on how the programmer chooses to use them. In general, these are convenient characteristics; but if these features are not desirable for your particular use, you might consider using typed arrays."
      ],
      [
        "Accessing array elements",
        "JavaScript arrays are zero-indexed. The first element of an array is at index 0, and the last element is at the index value equal to the value of the array's length property minus 1."
      ]
    ],
    "content": [
      {
        "id": 1,
        "name": "example 1",
        "title": "Iterating over an array"
      },
      {
        "id": 2,
        "name": "example 2",
        "title": "Shortening an array"
      },
      {
        "id": 3,
        "name": "example 3",
        "title": "Create empty array of fixed length"
      }
    ],

    "subcontent": {
      "properties": [
        {
          "id": 1,
          "name": "Array.prototype.length",
          "overview": "sets or returns the number of elements in that array",
          "desctiption": [
            [
              "desctiption",
              "The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype.length can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "arr.length -1 will get you the last item in the array"
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype[@@unscopables]",
          "overview": "The @@unscopable symbol property",
          "desctiption": [
            [
              "desctiption",
              "The @@unscopable symbol property contains property names that were not included in the ECMAScript standard prior to the ES2015 version."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype[@@unscopables] can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "Array.prototype[@@unscopables] in the array"
            }
          ]
        }
      ],

      "methods": [
        {
          "id": 1,
          "name": "Array.prototype.sort()",
          "overview": "The sort() method sorts the elements of an array in place and returns the sorted array.",
          "desctiption": [
            [
              "desctiption",
              "The sort() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the sort()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample sort()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "sort an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "sorting array in a.."
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype.reduce()",
          "overview": "The reduce() method reduces the elements of an array....",
          "desctiption": [
            [
              "desctiption",
              "The reduce() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the reduce()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample reduce()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "reduce an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "reduceing array in a.."
            }
          ]
        },
        {
          "id": 3,
          "name": "Array.prototype.split()",
          "overview": "The split() method splits the elements of an array in place and returns the splited array.",
          "desctiption": [
            [
              "desctiption",
              "The split() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the split()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample split()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "split an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "spliting array in a.."
            }
          ]
        },
        {
          "id": 4,
          "name": "Array.prototype.find()",
          "overview": "The find() method finds the elements of an array in place and returns the finded array.",
          "desctiption": [
            [
              "desctiption",
              "The find() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the find()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample find()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "find an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "finding array in a.."
            }
          ]
        },
        {
          "id": 5,
          "name": "Array.prototype.filter()",
          "overview": "The filter() method filters the elements of an array in place and returns the filtered array.",
          "desctiption": [
            [
              "desctiption",
              "The filter() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the filter()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample filter()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "filter an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "filtering array in a.."
            }
          ]
        },
        {
          "id": 6,
          "name": "Array.prototype.map()",
          "overview": "The map() method maps the elements of an array in place and returns the maped array.",
          "desctiption": [
            [
              "desctiption",
              "The map() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the map()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample map()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "map an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "mapping array in a.."
            }
          ]
        },
        {
          "id": 6,
          "name": "Array.prototype.push()",
          "overview": "The push() method pushs the elements of an array in place and returns the pushed array.",
          "desctiption": [
            [
              "desctiption",
              "The push() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the push()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample push()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "push an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "pushping array in a.."
            }
          ]
        }
      ]
    }
  },
  {
    "id": 2,
    "name": "function",
    "title": "methods & properties",
    "overview": "the JavaScript Array class is a global object that is used in the construction of Functions; which are high-level, list-like objects",

    "desctiption": [
      [
        "desctiption",
        "Function are list-like objects whose prototype has methods to perform traversal and mutation operations. Neither the length of a JavaScript Function nor the types of its elements are fixed. Since an array's length can change at any time, and data can be stored at non-contiguous locations in the array, JavaScript arrays are not guaranteed to be dense; this depends on how the programmer chooses to use them. In general, these are convenient characteristics; but if these features are not desirable for your particular use, you might consider using Function."
      ],
      [
        "Function",
        "JavaScript Function are.... index value equal to the value of the Function minus 1."
      ]
    ],
    "content": [
      {
        "id": 1,
        "name": "example 1",
        "title": "Iterating over an Function"
      },
      {
        "id": 2,
        "name": "example 2",
        "title": "Shortening an Function"
      },
      {
        "id": 3,
        "name": "example 3",
        "title": "Create empty Function of fixed length"
      }
    ],

    "subcontent": {
      "properties": [
        {
          "id": 1,
          "name": "Array.prototype.length",
          "overview": "sets or returns the number of elements in that array",
          "desctiption": [
            [
              "desctiption",
              "The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype.length can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "arr.length -1 will get you the last item in the array"
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype[@@unscopables]",
          "overview": "The @@unscopable symbol property",
          "desctiption": [
            [
              "desctiption",
              "The @@unscopable symbol property contains property names that were not included in the ECMAScript standard prior to the ES2015 version."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype[@@unscopables] can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "Array.prototype[@@unscopables] in the array"
            }
          ]
        }
      ],

      "methods": [
        {
          "id": 1,
          "name": "Array.prototype.sort()",
          "overview": "The sort() method sorts the elements of an array in place and returns the sorted array.",
          "desctiption": [
            [
              "desctiption",
              "The sort() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the sort()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample sort()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "sort an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "sorting array in a.."
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype.reduce()",
          "overview": "The reduce() method reduces the elements of an array....",
          "desctiption": [
            [
              "desctiption",
              "The reduce() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the reduce()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample reduce()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "reduce an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "reduceing array in a.."
            }
          ]
        },
        {
          "id": 3,
          "name": "Array.prototype.split()",
          "overview": "The split() method splits the elements of an array in place and returns the splited array.",
          "desctiption": [
            [
              "desctiption",
              "The split() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the split()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample split()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "split an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "spliting array in a.."
            }
          ]
        },
        {
          "id": 4,
          "name": "Array.prototype.find()",
          "overview": "The find() method finds the elements of an array in place and returns the finded array.",
          "desctiption": [
            [
              "desctiption",
              "The find() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the find()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample find()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "find an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "finding array in a.."
            }
          ]
        },
        {
          "id": 5,
          "name": "Array.prototype.filter()",
          "overview": "The filter() method filters the elements of an array in place and returns the filtered array.",
          "desctiption": [
            [
              "desctiption",
              "The filter() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the filter()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample filter()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "filter an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "filtering array in a.."
            }
          ]
        },
        {
          "id": 6,
          "name": "Array.prototype.map()",
          "overview": "The map() method maps the elements of an array in place and returns the maped array.",
          "desctiption": [
            [
              "desctiption",
              "The map() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the map()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample map()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "map an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "mapping array in a.."
            }
          ]
        },
        {
          "id": 6,
          "name": "Array.prototype.push()",
          "overview": "The push() method pushs the elements of an array in place and returns the pushed array.",
          "desctiption": [
            [
              "desctiption",
              "The push() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the push()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample push()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "push an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "pushping array in a.."
            }
          ]
        }
      ]
    }
  },
  {
    "id": 3,
    "name": "date",
    "title": "Date objects methods",
    "overview": "JavaScript Date objects represent a single moment in time in a platform-independent format",

    "desctiption": [
      [
        "desctiption",
        "date are list-like objects whose prototype has methods to perform traversal and mutation operations. Neither the length of a JavaScript date nor the types of its elements are fixed. Since an array's length can change at any time, and data can be stored at non-contiguous locations in the array, JavaScript arrays are not guaranteed to be dense; this depends on how the programmer chooses to use them. In general, these are convenient characteristics; but if these features are not desirable for your particular use, you might consider using date."
      ],
      [
        "date",
        "ate objects contain a Number that represents milliseconds since 1 January 1970 UTC."
      ]
    ],
    "content": [
      {
        "id": 1,
        "name": "example 1",
        "title": "Iterating over an date"
      },
      {
        "id": 2,
        "name": "example 2",
        "title": "Shortening an date"
      },
      {
        "id": 3,
        "name": "example 3",
        "title": "Create empty date of fixed length"
      }
    ],

    "subcontent": {
      "properties": [
        {
          "id": 1,
          "name": "Array.prototype.length",
          "overview": "sets or returns the number of elements in that array",
          "desctiption": [
            [
              "desctiption",
              "The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype.length can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "arr.length -1 will get you the last item in the array"
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype[@@unscopables]",
          "overview": "The @@unscopable symbol property",
          "desctiption": [
            [
              "desctiption",
              "The @@unscopable symbol property contains property names that were not included in the ECMAScript standard prior to the ES2015 version."
            ],
            [
              "value of the length property",
              "The value of the length property is an integer with a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "Array.prototype[@@unscopables] can"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "the arr length property"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "Array.prototype[@@unscopables] in the array"
            }
          ]
        }
      ],

      "methods": [
        {
          "id": 1,
          "name": "Array.prototype.sort()",
          "overview": "The sort() method sorts the elements of an array in place and returns the sorted array.",
          "desctiption": [
            [
              "desctiption",
              "The sort() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the sort()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample sort()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "sort an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "sorting array in a.."
            }
          ]
        },
        {
          "id": 2,
          "name": "Array.prototype.reduce()",
          "overview": "The reduce() method reduces the elements of an array....",
          "desctiption": [
            [
              "desctiption",
              "The reduce() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the reduce()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample reduce()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "reduce an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "reduceing array in a.."
            }
          ]
        },
        {
          "id": 3,
          "name": "Array.prototype.split()",
          "overview": "The split() method splits the elements of an array in place and returns the splited array.",
          "desctiption": [
            [
              "desctiption",
              "The split() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the split()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample split()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "split an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "spliting array in a.."
            }
          ]
        },
        {
          "id": 4,
          "name": "Array.prototype.find()",
          "overview": "The find() method finds the elements of an array in place and returns the finded array.",
          "desctiption": [
            [
              "desctiption",
              "The find() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the find()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample find()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "find an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "finding array in a.."
            }
          ]
        },
        {
          "id": 5,
          "name": "Array.prototype.filter()",
          "overview": "The filter() method filters the elements of an array in place and returns the filtered array.",
          "desctiption": [
            [
              "desctiption",
              "The filter() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the filter()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample filter()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "filter an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "filtering array in a.."
            }
          ]
        },
        {
          "id": 6,
          "name": "Array.prototype.map()",
          "overview": "The map() method maps the elements of an array in place and returns the maped array.",
          "desctiption": [
            [
              "desctiption",
              "The map() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the map()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample map()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "map an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "mapping array in a.."
            }
          ]
        },
        {
          "id": 7,
          "name": "Array.prototype.push()",
          "overview": "The push() method pushs the elements of an array in place and returns the pushed array.",
          "desctiption": [
            [
              "desctiption",
              "The push() property of an object which is an instance of type... numerically greater than the highest index in the array."
            ],
            [
              "the push()",
              "a positive sign and a value less than 2 to the 32nd power (232)."
            ]
          ],
          "content": [
            {
              "id": 1,
              "name": "example 1",
              "title": "contentexample push()"
            },
            {
              "id": 2,
              "name": "example 2",
              "title": "push an array"
            },
            {
              "id": 3,
              "name": "example 3",
              "title": "pushping array in a.."
            }
          ]
        }
      ]
    }
  }
]
